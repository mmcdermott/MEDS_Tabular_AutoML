[project]
name = "meds-tab"
version = "0.0.2"
authors = [
  { name="Matthew McDermott", email="mattmcdermott8@gmail.com" },
  { name="Nassim Oufattole", email="noufattole@gmail.com" },
  { name="Teya Bergamaschi", email="teyabergamaschi@gmail.com" },
]
description = "Scalable Tabularization of MEDS format Time-Series data"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = ["polars", "pyarrow", "loguru", "hydra-core", "numpy", "scipy<1.14.0", "pandas", "tqdm", "xgboost", "scikit-learn", "hydra-optuna-sweeper", "hydra-joblib-launcher", "ml-mixins"]

[project.scripts]
meds-tab-describe = "MEDS_tabular_automl.scripts.describe_codes:main"
meds-tab-tabularize-static = "MEDS_tabular_automl.scripts.tabularize_static:main"
meds-tab-tabularize-time-series = "MEDS_tabular_automl.scripts.tabularize_time_series:main"
meds-tab-cache-task = "MEDS_tabular_automl.scripts.cache_task:main"
meds-tab-xgboost = "MEDS_tabular_automl.scripts.launch_xgboost:main"
generate-subsets = "MEDS_tabular_automl.scripts.generate_subsets:main"
generate-optuna-intervals = "MEDS_tabular_automl.scripts.generate_optuna_intervals:main"


[project.optional-dependencies]
dev = ["pre-commit"]
tests = ["pytest", "pytest-cov", "rootutils"]
profiling = ["mprofile", "matplotlib"]

[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=8.0", "wheel"]
build-backend = "setuptools.build_meta"

[project.urls]
Homepage = "https://github.com/mmcdermott/MEDS_Tabular_AutoML"
Issues = "https://github.com/mmcdermott/MEDS_Tabular_AutoML/issues"
